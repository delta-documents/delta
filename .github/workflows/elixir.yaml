name: Delta CI

on:
  push:
    branches: [main]
    tags-ignore: ["v*"]
  pull_request:
    branches: [main]
  create:
    tags: ["v*"]
    branches: master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Run tests, Publish docs, Publish release
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "25"
          elixir-version: "1.14.0"
      - uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: delta-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            delta-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
            delta-

      - run: mix deps.get
      - run: mix test
      - run: mix docs
        
      - name: Setup docs repo
        run: |
          git config user.name "Delta CI"

          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.DOCS_REPO_SSH }}'
          
          git clone https://github.com/delta-documents/docs.git delta-docs-repo

      - name: Publish docs as latest
        run: |
          rm -rf delta-docs-repo/delta/latest
          mkdir -p delta-docs-repo/delta/latest
          cp -rp docs/* delta-docs-repo/delta/latest/

          cd delta-docs-repo

          git add .
          git commit -m "docs: delta $GITHUB_SHA"
          
          git push

      - name: Publish docs as version if tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          rm -rf delta-docs-repo/delta/${{github.ref_name}}
          mkdir -p delta-docs-repo/delta/${{github.ref_name}}
          cp -rp docs/* delta-docs-repo/delta/${{github.ref_name}}

          cd delta-docs-repo

          git add .
          git commit -m "docs: delta $GITHUB_SHA as ${{github.ref_name}}"
          
          git push

      - name: Create release if tag
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true