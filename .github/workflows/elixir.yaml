name: Delta CI

on:
  push:
    branches: [main]
    tags-ignore: ["v*"]
  pull_request:
    branches: [main]
  create:
    tags: ["v*"]
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "25"
          elixir-version: "1.14.0"
      - uses: actions/cache@v2
        with:
          path: |
            deps
            _build
          key: ${{ github.event.repository.name }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ github.event.repository.name }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
            ${{ github.event.repository.name }}-

      - run: mix deps.get
      - run: mix test

      - name: Build docs if main branch or tag
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        run: mix docs

      - name: Publish docs as latest if main branch
        if: github.ref == 'refs/heads/main'
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.DOCS_REPO_SSH }}
        with:
          source-directory: doc
          destination-github-username: delta-documents
          destination-repository-name: docs
          target-directory: ${{ github.event.repository.name }}/latest
          commit-message: ${{ github.event.repository.name }} on ${{ github.sha }}

      - name: Publish docs as version if tag and main branch
        if: github.ref == 'refs/heads/main' && startsWith(github.ref, 'refs/tags/v')
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.DOCS_REPO_SSH }}
        with:
          source-directory: doc
          destination-github-username: delta-documents
          destination-repository-name: docs
          target-directory: ${{ github.event.repository.name }}/latest
          commit-message: ${{ github.event.repository.name }} on ${{ github.sha }} as ${{ github.ref_name }}
        
      - name: Create release if tag and main branch
        if: github.ref == 'refs/heads/main' && startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
